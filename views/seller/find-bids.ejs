
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Find Bids - Propload</title>

  <link href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.19/tailwind.min.css" rel="stylesheet" />
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>

  <style>
    :root {
      --propload-primary: #e9e2b3;
      --propload-secondary: #2f6c7b;
      --propload-surface: #ffffff;
      --muted: #6b7280;
    }

    body {
      background: #f9fafb;
      color: #1f2937;
      font-family: 'Inter', sans-serif;
      display: flex;
      min-height: 100vh;
    }

    main {
      flex: 1;
      padding: 2rem;
      margin-left: 16rem; 
    }

    .card {
      background: var(--propload-surface);
      border-radius: 10px;
      box-shadow: 0 6px 16px rgba(47, 76, 86, 0.08);
      transition: all 0.25s ease;
    }

    .card:hover {
      transform: translateY(-2px);
      box-shadow: 0 10px 22px rgba(47, 76, 86, 0.12);
    }

    .btn-primary {
      background-color: var(--propload-secondary);
      color: white;
      transition: background 0.2s;
    }

    .btn-primary:hover {
      background-color: #255864;
    }

    .badge {
      font-size: 0.75rem;
      font-weight: 500;
      border-radius: 9999px;
      padding: 0.25rem 0.75rem;
    }

    .muted {
      color: var(--muted);
    }

    .section-header {
      color: var(--propload-secondary);
      font-weight: 600;
    }
  </style>
</head>

<body class="antialiased">
 
  <%- include('./sideNav', { currentPage: 'find-bids' }) %>

  
  <main>
    <%- include('../partials/flash-messages') %>

   
    <div class="card p-4 mb-6 border-l-4 border-[var(--propload-secondary)]">
      <div class="flex items-center justify-between flex-wrap gap-3">
        <div class="flex items-center gap-2">
          <i class="fas fa-sync-alt text-[var(--propload-secondary)]"></i>
          <span class="text-sm text-gray-700">
            Real-time project updates active â€¢ Only approved projects visible
          </span>
        </div>
        <div class="flex items-center gap-3">
          <a href="/seller/update-statuses" class="btn-primary text-sm px-3 py-1 rounded-md flex items-center gap-1 shadow">
            <i class="fas fa-sync-alt"></i> Update Now
          </a>
          <span class="text-xs text-[var(--propload-secondary)]" id="last-updated">Updated just now</span>
        </div>
      </div>
    </div>

   
    <div class="flex justify-between items-center mb-8 flex-wrap gap-4">
      <div>
        <h1 class="text-3xl font-bold text-gray-800">Find Projects to Bid On</h1>
        <p class="muted mt-1">Discover active projects in Round 1 bidding matching your expertise</p>
      </div>
      <div class="flex flex-wrap gap-2 text-sm">
        <span class="badge bg-green-100 text-green-800 flex items-center">
          <i class="fas fa-bolt mr-1"></i>
          <%= projects.filter(p => p.adminStatus === 'approved' && p.status === 'active' && p.biddingRounds.currentRound === 1).length %> Active Projects
        </span>
        <span class="badge bg-[var(--propload-primary)] text-[var(--propload-secondary)] flex items-center">
          <i class="fas fa-sync-alt mr-1"></i> Round 1 Bidding
        </span>
      </div>
    </div>

   
    <div class="card p-6 mb-8">
      <h2 class="section-header text-lg mb-4 flex items-center">
        <i class="fas fa-filter mr-2"></i> Smart Filtering
      </h2>

      <form action="/seller/find-bids" method="GET" class="grid md:grid-cols-5 gap-4">
        <div>
          <label for="pincode" class="block text-sm muted mb-1">Pin Code</label>
          <input type="text" id="pincode" name="pincode" value="<%= filters.pincode || '' %>"
            class="w-full border border-gray-200 rounded-md py-2 px-3 focus:ring-2 focus:ring-[var(--propload-secondary)]"
            placeholder="e.g. 821108" />
        </div>
        <div>
          <label for="state" class="block text-sm muted mb-1">State</label>
          <input type="text" id="state" name="state" value="<%= filters.state || '' %>"
            class="w-full border border-gray-200 rounded-md py-2 px-3 focus:ring-2 focus:ring-[var(--propload-secondary)]"
            placeholder="e.g. California" />
        </div>

        <div>
          <label for="city" class="block text-sm muted mb-1">City</label>
          <input type="text" id="city" name="city" value="<%= filters.city || '' %>"
            class="w-full border border-gray-200 rounded-md py-2 px-3 focus:ring-2 focus:ring-[var(--propload-secondary)]"
            placeholder="e.g. Los Angeles" />
        </div>

        <div>
          <label for="category" class="block text-sm muted mb-1">Project Type</label>
          <select id="category" name="category"
            class="w-full border border-gray-200 rounded-md py-2 px-3 focus:ring-2 focus:ring-[var(--propload-secondary)]">
            <option value="">All Categories</option>
            <option value="electrification" <%= filters.category==='electrification' ? 'selected' : '' %>>Electrification</option>
            <option value="architecture" <%= filters.category==='architecture' ? 'selected' : '' %>>Architecture</option>
            <option value="interior-design" <%= filters.category==='interior-design' ? 'selected' : '' %>>Interior Design</option>
            <option value="general-construction" <%= filters.category==='general-construction' ? 'selected' : '' %>>General Construction</option>
          </select>
        </div>

        <div class="flex items-end gap-2">
          <button type="submit" class="flex-1 btn-primary px-4 py-2 rounded-md flex items-center justify-center shadow">
            <i class="fas fa-search mr-2"></i> Apply Filters
          </button>
          <% if (filters.state || filters.city || filters.category) { %>
          <a href="/seller/find-bids"
            class="bg-gray-200 text-gray-700 px-4 py-2 rounded-md flex items-center hover:bg-gray-300">
            <i class="fas fa-times mr-2"></i> Clear
          </a>
          <% } %>
        </div>
      </form>

      <% if (filters.state || filters.city || filters.category) { %>
      <div class="mt-4 flex flex-wrap items-center gap-2 text-sm">
        <span class="muted">Active filters:</span>
        <% if (filters.state) { %>
        <span class="badge bg-[var(--propload-primary)] text-[var(--propload-secondary)]">
          <i class="fas fa-map-marker-alt mr-1"></i> <%= filters.state %>
        </span>
        <% } %>
        <% if (filters.city) { %>
        <span class="badge bg-green-100 text-green-800">
          <i class="fas fa-city mr-1"></i> <%= filters.city %>
        </span>
        <% } %>
        <% if (filters.category) { %>
        <span class="badge bg-yellow-100 text-yellow-800">
          <i class="fas fa-tag mr-1"></i> <%= filters.category %>
        </span>
        <% } %>
      </div>
      <% } %>
    </div>

   
        <!-- Project Cards Section -->
    <section class="grid sm:grid-cols-2 lg:grid-cols-3 gap-6">
      <% if (projects && projects.length > 0) { %>
        <% projects.forEach(project => { %>
          <% if (project.adminStatus === 'approved' && project.status === 'active' && project.biddingRounds.currentRound === 1) { %>
            <div class="card p-5 flex flex-col justify-between">
              <div>
                <h3 class="text-xl font-semibold text-gray-800 mb-2"><%= project.projectName %></h3>
                <p class="text-sm muted mb-3"><%= project.description ? project.description.substring(0, 100) : 'No description available.' %></p>

                <div class="flex flex-wrap gap-2 text-sm mb-3">
                  <span class="badge bg-gray-100 text-gray-700"><i class="fas fa-map-marker-alt mr-1"></i> <%= project.location.city %>, <%= project.location.state %></span>
                  <span class="badge bg-yellow-100 text-yellow-800"><i class="fas fa-tag mr-1"></i> <%= project.category %></span>
                  <% if (project.bidSettings && project.bidSettings.isActive) { %>
                    <span class="badge bg-green-100 text-green-800"><i class="fas fa-gavel mr-1"></i> Accepting Bids</span>
                  <% } %>
                </div>
              </div>

              <div class="border-t pt-3 mt-2 flex items-center justify-between">
                <div>
                  <p class="text-xs muted">Starting Bid</p>
                  <p class="font-semibold text-[var(--propload-secondary)]">$<%= project.bidSettings?.startingBid?.toLocaleString() || 0 %></p>
                </div>
                <div>
                  <p class="text-xs muted">Ends</p>
                  <p class="font-semibold"><%= moment(project.biddingRounds.round1.endDate).format('MMM D, YYYY') %></p>
                </div>
              </div>

              <div class="mt-4 flex justify-end">
                <a href="/seller/bid-details/<%= project._id %>" class="btn-primary px-4 py-2 rounded-md text-sm flex items-center gap-1">
                  <i class="fas fa-eye"></i> View Details
                </a>
              </div>
            </div>
          <% } %>
        <% }) %>
      <% } else { %>
        <div class="col-span-full text-center py-10">
          <p class="text-gray-500">No projects found matching your filters.</p>
        </div>
      <% } %>
    </section>

    <!-- Pagination -->
<% 
  const approvedActiveProjects = projects.filter(
    p => p.adminStatus === 'approved' && p.status === 'active' && p.biddingRounds.currentRound === 1
  ); 

  const itemsPerPage = 3;
  const totalPages = Math.ceil(approvedActiveProjects.length / itemsPerPage);
  const startIndex = (currentPage - 1) * itemsPerPage;
  const endIndex = startIndex + itemsPerPage;
  const paginatedProjects = approvedActiveProjects.slice(startIndex, endIndex);
%>

<!-- Project cards -->
<% if (paginatedProjects.length > 0) { %>
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-6">
    <% paginatedProjects.forEach(project => { %>
      <!-- Project Card -->
      <div class="bg-white shadow rounded-lg p-4 hover:shadow-lg transition duration-300">
        <h3 class="text-lg font-semibold text-gray-800"><%= project.title %></h3>
        <p class="text-sm text-gray-600 mt-1"><%= project.description %></p>
        <div class="text-sm text-gray-500 mt-2">
          <strong>Location:</strong> <%= project.city %>, <%= project.state %>
        </div>
        <div class="text-sm text-gray-500">
          <strong>Category:</strong> <%= project.category %>
        </div>
      </div>
    <% }) %>
  </div>
<% } else { %>
  <p class="text-gray-500 text-center mt-6">No projects found.</p>
<% } %>

<!-- Pagination -->
<% if (approvedActiveProjects.length > 0 && totalPages > 1) { %>
  <div class="mt-8 text-center">
    <div class="bg-white shadow rounded-lg p-4 inline-flex items-center space-x-4">
      <span class="text-sm text-gray-600">
        Showing <%= paginatedProjects.length %> of <%= approvedActiveProjects.length %> projects
      </span>

      <div class="flex space-x-2">
        <!-- Prev -->
        <% if (currentPage > 1) { %>
          <a
            href="?page=<%= currentPage - 1 %><%= filters.state ? '&state=' + filters.state : '' %><%= filters.city ? '&city=' + filters.city : '' %><%= filters.category ? '&category=' + filters.category : '' %>"
            class="bg-gray-200 text-gray-600 px-3 py-1 rounded text-sm hover:bg-gray-300 transition duration-300">
            <i class="fas fa-chevron-left"></i>
          </a>
        <% } else { %>
          <button class="bg-gray-100 text-gray-400 px-3 py-1 rounded text-sm cursor-not-allowed">
            <i class="fas fa-chevron-left"></i>
          </button>
        <% } %>

        <!-- Page numbers -->
        <% for (let i = 1; i <= totalPages; i++) { %>
          <a
            href="?page=<%= i %><%= filters.state ? '&state=' + filters.state : '' %><%= filters.city ? '&city=' + filters.city : '' %><%= filters.category ? '&category=' + filters.category : '' %>"
            class="<%= i === currentPage ? 'bg-indigo-600 text-white' : 'bg-gray-200 text-gray-600 hover:bg-gray-300' %> px-3 py-1 rounded text-sm transition duration-300">
            <%= i %>
          </a>
        <% } %>

        <!-- Next -->
        <% if (currentPage < totalPages) { %>
          <a
            href="?page=<%= currentPage + 1 %><%= filters.state ? '&state=' + filters.state : '' %><%= filters.city ? '&city=' + filters.city : '' %><%= filters.category ? '&category=' + filters.category : '' %>"
            class="bg-gray-200 text-gray-600 px-3 py-1 rounded text-sm hover:bg-gray-300 transition duration-300">
            <i class="fas fa-chevron-right"></i>
          </a>
        <% } else { %>
          <button class="bg-gray-100 text-gray-400 px-3 py-1 rounded text-sm cursor-not-allowed">
            <i class="fas fa-chevron-right"></i>
          </button>
        <% } %>
      </div>
    </div>
  </div>
<% } %>




  </main>

  <script>

 document.getElementById("pincode").addEventListener("input", async function () {
    const pin = this.value.trim();

    // Proceed only if PIN code is 6 digits
    if (pin.length === 6 && /^\d{6}$/.test(pin)) {
      try {
        const response = await fetch(`https://api.postalpincode.in/pincode/${pin}`);
        const data = await response.json();

        if (data[0].Status === "Success") {
          const postOffice = data[0].PostOffice[0];
          document.getElementById("state").value = postOffice.State;
          document.getElementById("city").value = postOffice.District;
        } else {
          document.getElementById("state").value = "";
          document.getElementById("city").value = "";
          alert("Invalid PIN code. Please check and try again.");
        }
      } catch (err) {
        console.error("Error fetching location:", err);
        alert("Unable to fetch location. Please try again later.");
      }
    } else {
      // Reset fields if PIN is not valid
      document.getElementById("state").value = "";
      document.getElementById("city").value = "";
    }
  });












    setInterval(() => location.reload(), 60000);
    setInterval(() => {
      const lastUpdated = document.getElementById('last-updated');
      if (lastUpdated) lastUpdated.textContent = 'Updated ' + moment().fromNow();
    }, 60000);
  </script>
</body>
</html>
